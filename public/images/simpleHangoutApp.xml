<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<!-- Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *	
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License
-->
	<ModulePrefs title="Fitcasts">
		<Require feature="rpc" />
		<Require feature="views" />
		<Require feature="locked-domain" />
	</ModulePrefs>
	<Content type="html"><![CDATA[ 
  <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>    
    <script src="//talkgadget.google.com/hangouts/api/hangout.js?v=1.0"></script>
<link href="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.min.css" rel="stylesheet">
<style type="text/css">
  .video-container {
    position: relative;
    padding-bottom: 47.25%;
    padding-top: 30px; height: 0; overflow: hidden;
}
 
.video-container iframe,
.video-container object,
.video-container embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

#currentTime {color: white; font-size: 14px; font-weight: bold;}
#duration {color: white; font-size: 14px; font-weight: bold;}
</style>
<body style="background-color: #181818;">
  <div class="container">
<div class="row center"><h2 style="text-align: center; color: white; margin-top:20px; margin-bottom: 20px;"></h2> </div> 
<!-- Make sure ?enablejsapi=1 is on URL -->
<div class="row center" style="max-width:640px; float: none;
margin-left: auto; margin-right: auto;">
<div class="video-container">
<div id="video"></div></div>
</div>
<div class="row center">
<ul class="inline" style="text-align:center; margin-top: 15px;">
<li><a src="#" class="btn btn-primary btn-large" id="play-button">Play
  </a></li>
  <li><a src="#" class="btn btn-primary btn-large" id="pause-button">Pause
  </a></li>
  <li><input type="range" id="seek" title="Seek" min="0" max="274" step="1" value="0"></li>
  <li><span id="currentTime">0:00</span></li>
  <li><span id="duration">0:00</span></li>
</ul>
</div>
</div>
<div class="row center" style="text-align:center; margin-top: 10px;">
<a style="color:white; font-size: 18px; font-weight:bold;" href="http://www.fitcasts.com" target="_blank">Click here to search for other Fitcasts videos</a>
</div>
</body>
<script> 
var seekBarInterval = null;
  function HangoutDemo() {  
    console.log("Starting..."); 
    gapi.hangout.onApiReady.add(this.onApiReady.bind(this)); 
  } 
    
  HangoutDemo.prototype.onApiReady = function (event) { 
    if (event.isApiReady === true) {  
      console.log("API Ready");
    } 
  };  
     
var random = "randomNumber";

// this function gets called when API is ready to use
function onYouTubePlayerAPIReady() {
  // create the global player from the specific iframe (#video)
  player = new YT.Player('video', {
                  height: '480',
                  width: '640',
    playerVars: {
      'controls': 0,
      'enablejsapi': 1
      },
    events: {
      // call this function when player is ready to use
      'onReady': onPlayerReady,
      'onStateChange': onStateChange
    }
  });
}

function onPlayerReady(event) {
  
  // bind events
  var playButton = document.getElementById("play-button");
  playButton.addEventListener("click", function() {
  gapi.hangout.data.setValue('playState','play');
  player.playVideo();
});
  
  var pauseButton = document.getElementById("pause-button");
  pauseButton.addEventListener("click", function() {
  gapi.hangout.data.setValue('playState','pause');
  player.pauseVideo();
});
value(); 
}

function onStateChange(event) {
  console.log('State is ' + event.data);
  
  var player = event.target;

  switch (event.data) {
    case YT.PlayerState.ENDED:
      if (seekBarInterval != null) {
        clearInterval(seekBarInterval);
        seekBarInterval = null;
      }
      
      var duration = Math.round(player.getDuration());
      //$('#currentTime').html(secondsToMmSs(duration));
      $('#seek').val(duration);
    break;
      
    case YT.PlayerState.PLAYING:
      if (seekBarInterval != null) {
        clearInterval(seekBarInterval);
      }
      
      setSeekBarInterval();
    
      
      // $('#volume').val(player.getVolume());
      
      var duration = Math.round(player.getDuration());
      $('#duration').html(secondsToMmSs(duration));
      $('#seek').attr('max', duration);
    break;
      
    case YT.PlayerState.PAUSED:
      
      if (seekBarInterval != null) {
        clearInterval(seekBarInterval);
        seekBarInterval = null;
      }
    break;
      
    case YT.PlayerState.BUFFERING:
      
      if (seekBarInterval != null) {
        clearInterval(seekBarInterval);
        seekBarInterval = null;
      }
    break;
      
    case YT.PlayerState.CUED:
    break;
  }
}


gapi.hangout.data.onStateChanged.add(function(stateChange){
  switch( stateChange.state.playState ){
    case 'play':
      player.playVideo();
      break;

    case 'pause':
      player.pauseVideo();
      break;

    case 'seek':
      var random = "randomNumber";
      var val = gapi.hangout.data.getValue(random);
      // alert(JSON.parse(val).replace(/"/g, ""));
      player.seekTo(JSON.parse(val).replace(/"/g, ""), true);
    $('#seek').val(JSON.parse(val).replace(/"/g, ""));
      break;
  }
});

function secondsToMmSs(seconds) {
  var minutesValue = Math.floor(seconds / 60);
  var secondsValue = Math.floor(seconds % 60);
  if (secondsValue < 10) {
    secondsValue = '0' + secondsValue;
  }
  
  return minutesValue + ':' + secondsValue;
}

$('#seek').change(function() {
    if (seekBarInterval != null) {
      clearInterval(seekBarInterval);
    }
    
    $('#currentTime').html(secondsToMmSs($(this).val()));
  });
  
  $('#seek').mouseup(function() {
  var rand = $(this).val();
    var random = "randomNumber";
    var delta = {};
    delta[random] = JSON.stringify(rand);
    gapi.hangout.data.submitDelta(delta, []);
    gapi.hangout.data.setValue('playState','seek');
    player.seekTo($(this).val(), true);
    
    setSeekBarInterval();
  });

function setSeekBarInterval() {
  seekBarInterval = setInterval(function() {
    var currentTime = Math.round(player.getCurrentTime());
    $('#currentTime').html(secondsToMmSs(currentTime));
    $('#seek').val(currentTime);
  }, 1000);
}



function value(){
var random = "randomNumber";
if (gapi.hangout.data.getValue(random) == undefined) {

  var rand = gadgets.views.getParams()['appData'];
  segments = rand.split('~');
  player.cueVideoById(segments[0], 5);
  //alert(rand);
  segments2 = segments[1].split('_').join(' ');
  var paragraph = 'Workout together with your friends using ' + segments2 + ' videos.'
  $('h2').html(paragraph)
    var delta = {};
    delta[random] = JSON.stringify(segments[0]);
    delta[random2] = JSON.stringify(paragraph);
    gapi.hangout.data.submitDelta(delta, []);
  }
  else {
  var val = gapi.hangout.data.getValue(random);
  var val2 = gapi.hangout.data.getValue(random2);
  player.cueVideoById(JSON.parse(val).replace(/"/g, ""), 5)
  $('h2').html(JSON.parse(val2).replace(/"/g, ""))
}
}

// Inject YouTube API script
var tag = document.createElement('script');
tag.src = "//www.youtube.com/player_api?enablejsapi=1&version=3";
var firstScriptTag = document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag); 
    
  var hangoutDemo = new HangoutDemo();  
</script>
]]>
</Content>
</Module>

